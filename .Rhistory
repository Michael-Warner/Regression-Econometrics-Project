geom_bar() +
labs(title = "Booking Status by Month",
x = "Month",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
table(data$arrival_date_week_number)
#Which are the most busy week?
ggplot(data = data, aes(arrival_date_week_number, fill = hotel)) +
geom_bar() +
labs(title = "Booking Status by Week",
x = "Week",
y = "Count")
#Which is the most busy day of the month?
ggplot(data = data, aes(arrival_date_day_of_month, fill = hotel)) +
geom_bar() +
labs(title = "Booking Status by Day",
x = "Day",
y = "Count")
#Which month has the highest number of cancellations?
ggplot(data, aes(arrival_date_month, fill = factor(is_canceled))) +
geom_bar() + geom_text(stat = "count", aes(label = ..count..), hjust = 1) +
coord_flip() + scale_fill_discrete(
name = "Booking Status") +
labs(title = "Booking Status by Month",
x = "Month",
y = "Count")
table(data$is_canceled, data$arrival_date_month)
prop.table(table(data$is_canceled, data$arrival_date_month), margin = 2)
#Which Week has the highest number of cancellations?
ggplot(data, aes(arrival_date_week_number, fill = factor(is_canceled))) +
geom_bar() +
coord_flip() + scale_fill_discrete(
name = "Booking Status") +
labs(title = "Booking Status by Week",
x = "Week",
y = "Count")
table(data$is_canceled, data$arrival_date_week_number)
prop.table(table(data$is_canceled, data$arrival_date_week_number), margin = 2)
#Which day of the month has the highest number of cancellations?
ggplot(data, aes(arrival_date_day_of_month, fill = factor(is_canceled))) +
geom_bar() +
coord_flip() + scale_fill_discrete(
name = "Booking Status") +
labs(title = "Cancellation Status by Day of Month",
x = "Day",
y = "Count")
table(data$is_canceled, data$arrival_date_day_of_month)
prop.table(table(data$is_canceled, data$arrival_date_day_of_month), margin = 2)
#Subset the data that only includes the guests who didn't cancel the booking
data_0 <- data[data$is_canceled == "Not Canceled", ]
# Visualize the guests by Country
# Subset the data to include the countries which has more than 1500 bookings
# otherwise including all the country with few or occasional request to avoid the graph from being clumsy
sub_data <- data_0 %>%
group_by(country) %>%
filter(n() > 1500)
sub_data$county_name <- countrycode(sub_data$country,
origin = "iso3c",
destination = "country.name")
# Guests by Country per hotel
ggplot(sub_data, aes(county_name, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Booking Status by Country",
x = "Country",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# How long do people stay at the hotels?
ggplot(sub_data, aes(x=stays_in_weekend_nights,fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Stay Duration(In Weekend)",
x = "Stays in nights",
y = "Count")
ggplot(sub_data, aes(x=stays_in_week_nights,fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Stay Duration(In Week)",
x = "Stays in nights",
y = "Count")
#Bookings by market segment of all vs non canceled bookings
ggplot(data, aes(market_segment, fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Hotel Booking by Market Segment",
x = "Market Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_data, aes(market_segment, fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Hotel Booking by Market Segment of non-cancellations",
x = "Market Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df <- subset(data,
as.character(data$reserved_room_type) != as.character(data$assigned_room_type))
table(df$is_canceled)
prop.table(table(df$is_canceled))
#Did the number of changes made to the booking impact the cancellations?
ggplot(data,aes(booking_changes, fill=is_canceled)) +
geom_bar(stat = "count", position = position_dodge())+
labs(title = "Booking Status by Changes",
x = "Number of Changes",
y = "Count") +
scale_fill_discrete(
name = "Booking Status"
)
ggplot(data[which(data$booking_changes<3),],aes(booking_changes, fill=is_canceled)) +
geom_bar(stat = "count", position = position_dodge())+
labs(title = "Booking Status by Changes",
x = "Number of Changes",
y = "Count") +
scale_fill_discrete(
name = "Booking Status"
)
table(data$is_canceled, data$booking_changes)
prop.table(table(data$is_canceled, data$booking_changes), margin = 2)
#Does type of deposit impact the cancellation?
ggplot(data, aes(deposit_type,fill=is_canceled)) +
geom_bar(position = position_dodge())+
labs(title = "Booking Status by Deposit Type",
x = "Deposit Type",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
table(data$is_canceled, data$deposit_type)
prop.table(table(data$is_canceled, data$deposit_type),2)
data_non_refund <- data[data$deposit_type == "Non Refund",]
table(data_non_refund$arrival_date_month, data_non_refund$deposit_type)
ggplot(data_non_refund, aes(arrival_date_year,fill=is_canceled)) +
geom_bar(position = position_dodge())+
labs(title = "Cancelation by year for Non Refund Deposit Type",
x = "Year",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
ggplot(data_non_refund, aes(arrival_date_month,fill=is_canceled)) +
geom_bar(position = position_dodge())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Cancelation by month for Non Refund Deposit Type",
x = "Month",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
ggplot(data_non_refund, aes(arrival_date_day_of_month, fill=is_canceled)) +
geom_bar(position = position_dodge())+
labs(title = "Cancelation by day of month for Non Refund Deposit Type",
x = "Day of Month",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
summary(data_non_refund)
table(data_non_refund$is_canceled, data_non_refund$country)
format(round(prop.table(table(data_non_refund$is_canceled,
data_non_refund$country)),4), nsmall = 4)
table(data$country == c("PRT"), data$deposit_type)
prop.table(table(data$country == c("PRT"), data$deposit_type),2)
ggplot(data_non_refund, aes(hotel, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit Status by Location",
x = "Country",
y = "Count")
ggplot(data_non_refund, aes(market_segment, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit by Market Segment by Hotel",
x = "Market Segment",
y = "Count")
ggplot(data_non_refund, aes(distribution_channel, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit Status by Distribution Channel",
x = "Distribution Channel",
y = "Count")
ggplot(data_non_refund, aes(customer_type, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit Status by Customer Type",
x = "Customer Type",
y = "Count")
table(data_non_refund$market_segment)
prop.table(table(data_non_refund$market_segment))
ggplot(sub_data, aes(x=stays_in_week_nights,fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Stay Duration(In Week)",
x = "Stays in nights",
y = "Count")
#Bookings by market segment of all vs non canceled bookings
ggplot(data, aes(market_segment, fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Hotel Booking by Market Segment",
x = "Market Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(sub_data, aes(market_segment, fill = hotel)) +
geom_bar(position = position_dodge()) +
labs(title = "Hotel Booking by Market Segment of non-cancellations",
x = "Market Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
df <- subset(data,
as.character(data$reserved_room_type) != as.character(data$assigned_room_type))
table(df$is_canceled)
prop.table(table(df$is_canceled))
#Did the number of changes made to the booking impact the cancellations?
ggplot(data,aes(booking_changes, fill=is_canceled)) +
geom_bar(stat = "count", position = position_dodge())+
labs(title = "Booking Status by Changes",
x = "Number of Changes",
y = "Count") +
scale_fill_discrete(
name = "Booking Status"
)
ggplot(data[which(data$booking_changes<3),],aes(booking_changes, fill=is_canceled)) +
geom_bar(stat = "count", position = position_dodge())+
labs(title = "Booking Status by Changes",
x = "Number of Changes",
y = "Count") +
scale_fill_discrete(
name = "Booking Status"
)
table(data$is_canceled, data$booking_changes)
prop.table(table(data$is_canceled, data$booking_changes), margin = 2)
#Does type of deposit impact the cancellation?
ggplot(data, aes(deposit_type,fill=is_canceled)) +
geom_bar(position = position_dodge())+
labs(title = "Booking Status by Deposit Type",
x = "Deposit Type",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
table(data$is_canceled, data$deposit_type)
prop.table(table(data$is_canceled, data$deposit_type),2)
data_non_refund <- data[data$deposit_type == "Non Refund",]
table(data_non_refund$arrival_date_month, data_non_refund$deposit_type)
ggplot(data_non_refund, aes(arrival_date_year,fill=is_canceled)) +
geom_bar(position = position_dodge())+
labs(title = "Cancelation by year for Non Refund Deposit Type",
x = "Year",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
ggplot(data_non_refund, aes(arrival_date_month,fill=is_canceled)) +
geom_bar(position = position_dodge())+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Cancelation by month for Non Refund Deposit Type",
x = "Month",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
ggplot(data_non_refund, aes(arrival_date_day_of_month, fill=is_canceled)) +
geom_bar(position = position_dodge())+
labs(title = "Cancelation by day of month for Non Refund Deposit Type",
x = "Day of Month",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
summary(data_non_refund)
table(data_non_refund$is_canceled, data_non_refund$country)
format(round(prop.table(table(data_non_refund$is_canceled,
data_non_refund$country)),4), nsmall = 4)
table(data$country == c("PRT"), data$deposit_type)
prop.table(table(data$country == c("PRT"), data$deposit_type),2)
ggplot(data_non_refund, aes(hotel, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit Status by Location",
x = "Country",
y = "Count")
ggplot(data_non_refund, aes(market_segment, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit by Market Segment by Hotel",
x = "Market Segment",
y = "Count")
ggplot(data_non_refund, aes(distribution_channel, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit Status by Distribution Channel",
x = "Distribution Channel",
y = "Count")
ggplot(data_non_refund, aes(customer_type, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Non Refundable Deposit Status by Customer Type",
x = "Customer Type",
y = "Count")
table(data_non_refund$market_segment)
prop.table(table(data_non_refund$market_segment))
table(data_non_refund$distribution_channel)
prop.table(table(data_non_refund$distribution_channel))
table(data_non_refund$customer_type)
prop.table(table(data_non_refund$customer_type))
ggplot(data, aes(customer_type, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Hotel Preference by Customer Type",
x = "Customer Type",
y = "Count") +
scale_fill_discrete(
name = "Hotel")
#Hotel preference in relation to customer type who canceled
ggplot(data[which(data$is_canceled == "Canceled"),], aes(customer_type, fill = hotel)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Hotel Preference by Customer Type, Canceled Only",
x = "Customer Type",
y = "Count") +
scale_fill_discrete(
name = "Hotel")
table(data$is_canceled, data$customer_type)
prop.table(table(data$is_canceled, data$customer_type))
prop.table(table(data$is_canceled, data$customer_type),2)
#Did the hotel charge differently for different customer type?
ggplot(data, aes(x = customer_type, y = adr, fill = hotel)) +
geom_boxplot(position = position_dodge()) +
ylim(-10, 525)+
labs(title = "Price Charged by Hotel Type",
subtitle = "for Customer Type",
x = "Customer Type",
y = "Price per night(EUR)") +
scale_fill_discrete(
name = "Hotel")
ggplot(data[which(data$is_canceled != "Canceled"),], aes(x = customer_type,
y = adr, fill = hotel)) +
geom_boxplot(position = position_dodge()) +
ylim(-10, 525)+
labs(title = "Price Charged by Hotel Type, and Not Canceled",
subtitle = "for Customer Type",
x = "Customer Type",
y = "Price per night(EUR)") +
scale_fill_discrete(
name = "Hotel")
#Canceled clients based on the charge rate per customer type
ggplot(data[which(data$is_canceled == "Canceled"),], aes(x = customer_type, y = adr, fill = hotel)) +
geom_boxplot(position = position_dodge()) +
ylim(-10, 525)+
labs(title = "Price Charged by Hotel Type and Canceled",
subtitle = "for Customer Type",
x = "Customer Type",
y = "Price per night(EUR)") +
scale_fill_discrete(
name = "Hotel")
#Did the number of special requests made by the customer impact the cancellations?
boxplot(data$total_of_special_requests)
ggplot(data,aes(total_of_special_requests,fill=is_canceled)) +
geom_bar(stat = "count", position = position_dodge()) +
labs(title = "Booking Status by Special Requests",
x = "Number of Special Requests",
y = "Count") +
scale_fill_discrete(
name = "Booking Status")
table(data$is_canceled, data$total_of_special_requests)
prop.table(table(data$is_canceled, data$total_of_special_requests))
prop.table(table(data$is_canceled, data$total_of_special_requests),2)
#Do repeated guests cancel more often then non repeated guests?
ggplot(data, aes(is_repeated_guest, fill = is_canceled)) +
geom_bar(position = position_dodge()) +
labs(title = "Cancelation by Repeated Guests",
x = "Guest",
y = "Number of guests") +
scale_fill_discrete(
name = "Canceled")
table(data$is_canceled, data$is_repeated_guest)
prop.table(table(data$is_canceled, data$is_repeated_guest),2)
ggplot(data, aes(meal, fill = is_canceled)) +
geom_bar(position = position_dodge()) +
labs(title = "Cancelation Based on Meals",
x = "Meal Type",
y = "Number of guests") +
scale_fill_discrete(
name = "Canceled")
table(data$is_canceled, data$meal)
prop.table(table(data$is_canceled, data$meal),2)
ggplot(data, aes(adults, fill = is_canceled)) +
geom_bar(position = position_dodge()) +
labs(title = "Cancelation Based on Adults",
x = "Number of Adults",
y = "Number of Guests") +
xlim(0, 4) +
scale_fill_discrete(
name = "Canceled")
ggplot(data, aes(children, fill = is_canceled)) +
geom_bar(position = position_dodge()) +
labs(title = "Cancelation Based on Children",
x = "Number of Children",
y = "Number of Guests") +
xlim(0, 4) +
scale_fill_discrete(
name = "Canceled")
ggplot(data, aes(babies, fill = is_canceled)) +
geom_bar(position = position_dodge()) +
labs(title = "Cancelation Based on Babies",
xlim(0, 4),
x = "Number of Babies",
y = "Number of Guests") +
xlim(0, 4) +
scale_fill_discrete(
name = "Canceled")
#Run the logistic regression model using the glm() function
logit.model <- glm(is_canceled ~ ., family = binomial(link = 'logit'), data = data)
options(max.print=100000)
summary(logit.model)
#Only kept variables with significant values
logit.model_1 <- glm(is_canceled ~ hotel + lead_time +
arrival_date_year +
arrival_date_month +
arrival_date_week_number +
arrival_date_day_of_month +
stays_in_weekend_nights +
stays_in_week_nights + adults + children +
meal +
market_segment +
distribution_channel + is_repeated_guest + reserved_room_type +
assigned_room_type + booking_changes +
deposit_type + customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data)
summary(logit.model_1)
#All values are significant so are left in, with an AIC value of 107526
#check for multicollinearity
#use the car package
vif(logit.model_1)
#Error in vif.default(logit.model_1),there are aliased coefficients in the model
#Aliased coefficients in model were looked for and removed
alias( glm(is_canceled ~ .,family = binomial(link = 'logit'), data = data) )
logit.model_2 <- glm(is_canceled ~ hotel + lead_time +
arrival_date_year +arrival_date_month +
arrival_date_week_number + arrival_date_day_of_month +
stays_in_weekend_nights + stays_in_week_nights + adults +
children + meal + market_segment + distribution_channel +
is_repeated_guest + reserved_room_type + booking_changes +
deposit_type + customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data)
summary(logit.model_2)
#check for multicollinearity
#use the car package
vif(logit.model_2)
logit.model_3 <- glm(is_canceled ~ hotel + lead_time  +
arrival_date_year + arrival_date_week_number +
arrival_date_day_of_month +
stays_in_weekend_nights + stays_in_week_nights + adults +
children + meal + market_segment + distribution_channel +
is_repeated_guest + booking_changes +
deposit_type + customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data)
summary(logit.model_3)
logit.model_4 <- glm(is_canceled ~ hotel + lead_time  +
arrival_date_year + stays_in_weekend_nights + stays_in_week_nights + adults +
children + meal + market_segment + distribution_channel +
is_repeated_guest + booking_changes +
deposit_type + customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data)
summary(logit.model_4)
vif(logit.model_4)
logit.model_5 <- glm(is_canceled ~ hotel + lead_time +
stays_in_weekend_nights + stays_in_week_nights + adults +
children + meal + distribution_channel +
is_repeated_guest + booking_changes +
deposit_type + customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data)
summary(logit.model_5)
vif(logit.model_5)
# check the accuracy of the model
#create two subsets: one to build a predictive model, one for testing
data.train <- data[1:96000, ]
data.test <- data[-c(1:96000), ]
logit.model.train <- glm(is_canceled ~ hotel + lead_time + stays_in_weekend_nights + stays_in_week_nights + adults +
children + meal + distribution_channel +
is_repeated_guest + booking_changes +
deposit_type + customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data.train)
summary(logit.model.train)
#predict cancellation using the model
#probability
data.test$cancellation.predict <- predict(logit.model.train, newdata = data.test, type = 'response')
head(data.test$cancellation.predict)
#value 0/1
data.test$cancellation.predict <- ifelse(data.test$cancellation.predict > 0.5, "Canceled", "Not Canceled")
head(data.test$cancellation.predict)
#calculate the prediction accuracy
misclassificationError <- mean(data.test$cancellation.predict != data.test$is_canceled)
misclassificationError <- round(misclassificationError, digits = 2 )
print(paste('Prediction accuracy =', 1 - misclassificationError))
#create tables to better understand where the errors are from
tab <- table(data.test$is_canceled , data.test$cancellation.predict)
tab
prop.table(tab,1)
mosaicplot(tab, cex = 0.5, color = TRUE)
#the dataset without deposity type
data_nodeposittype <- data[,-21]
data.train_1 <- data_nodeposittype[1:96000, ]
data.test_1 <- data_nodeposittype[-c(1:96000), ]
logit.model.train_1 <- glm(is_canceled ~ hotel + lead_time + stays_in_weekend_nights + stays_in_week_nights + adults +
children + meal + distribution_channel +
is_repeated_guest + booking_changes +
customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data.train_1)
summary(logit.model.train_1)
#remove stays_in_weekend_nights, stays_in_week_nights,adults, children
logit.model.train_2 <- glm(is_canceled ~ hotel + lead_time + meal + distribution_channel +
is_repeated_guest + booking_changes +
customer_type + adr + total_of_special_requests,
family = binomial(link = 'logit'), data = data.train_1)
summary(logit.model.train_2)
#predict cancellation using the model
#probability
data.test_1$cancellation.predict <- predict(logit.model.train_2, newdata = data.test_1, type = 'response')
head(data.test_1$cancellation.predict)
#value 0/1
data.test_1$cancellation.predict <- ifelse(data.test_1$cancellation.predict > 0.5, "Canceled", "Not Canceled")
head(data.test_1$cancellation.predict)
#calculate the prediction accuracy
misclassificationError_1 <- mean(data.test_1$cancellation.predict != data.test_1$is_canceled)
misclassificationError_1 <- round(misclassificationError_1, digits = 2 )
print(paste('Prediction accuracy =', 1 - misclassificationError_1))
#create tables to better understand where the errors are from
tab_1 <- table(data.test_1$is_canceled , data.test_1$cancellation.predict)
tab_1
prop.table(tab_1,1)
#predict a decision for an application
predictors <- data.frame(hotel="City Hotel", lead_time=60, stays_in_weekend_nights=0,
stays_in_week_nights=2, adults=2,  children=0, meal="BB",distribution_channel="TA/TO",
is_repeated_guest="Not Repeated Guest", booking_changes=0, deposit_type="No Deposit",
customer_type="Transient", adr=120, total_of_special_requests=0)
predict(logit.model.train,predictors,type = "response")
